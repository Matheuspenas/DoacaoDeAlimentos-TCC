@page "/CadastroDeDoacao"
@using TCCDoacaoDeAlimentos.Shared.Models
@inject NavigationManager Navigation

<div class="min-vh-100 d-flex align-items-center" style="background-color: #d4edda;">
    <div class="container py-5">
        <div class="row justify-content-center">
            <div class="col-lg-8 col-md-10">
                <div class="card shadow">
                    <div class="card-body p-5">
                        <h1 class="card-title text-center">Cadastro de Doação</h1>
                        <h6 class="text-center mb-4">
                            Cadastre uma nova doação para beneficiar uma ONG
                        </h6>

                        @if (erroSalvar)

                        {
                            <div class="alert alert-danger">
                                @mensagemErro
                                <button type="button" class="btn-close float-end" @onclick="() => erroSalvar = false"></button>
                            </div>
                        }

                        @* <EditForm Model="@NovaDoacao" OnValidSubmit="@SalvarDoacao"> *@
                        @*     <DataAnnotationsValidator /> *@
                        @*     <ValidationSummary /> *@

                        @*     <hr /> *@

                        @*     <h2 class="border-bottom pb-2 mb-4 mt-5">Informações da Doação</h2> *@

                        @*     <div class="mb-3"> *@
                        @*         <label for="ong" class="form-label">ONG Beneficiada</label> *@
                        @*         <InputSelect @bind-Value="NovaDoacao.IdOng" class="form-control" id="ong"> *@
                        @*             <option value="">Selecione a ONG...</option> *@
                        @*             @foreach (var ong in Ongs) *@

                        @*             { *@
                        @*                 <option value="@ong.IdOng">@ong.RazaoSocial</option> *@
                        @*             } *@
                        @*         </InputSelect> *@
                        @*         <ValidationMessage For="@(() => NovaDoacao.IdOng)" /> *@
                        @*     </div> *@

                            <div class="row">
                                <div class="col-md-6 mb-3">
                                    <label for="dataDoacao" class="form-label">Data da Doação</label>
                                    <InputDate @bind-Value="NovaDoacao.DataDoacao" class="form-control" id="dataDoacao" />
                                    <ValidationMessage For="@(() => NovaDoacao.DataDoacao)" />
                                </div>
                            </div>

                            <div class="mb-3">
                                <label for="observacao" class="form-label">Observações</label>
                                <InputTextArea @bind-Value="NovaDoacao.Observacao" class="form-control" id="observacao" placeholder="Informações adicionais sobre a doação" />
                            </div>

                            <h3 class="border-bottom pb-2 mb-4 mt-5">Itens da Doação</h3>

                            @foreach (var item in Itens)

                            {
                                <div class="border p-3 mb-4 rounded bg-light position-relative">
                                    <button type="button" class="btn-close position-absolute top-0 end-0 m-2" @onclick="() => RemoverItem(item)" title="Remover Item"></button>
                                    <div class="row g-3">
                                        <div class="col-md-6">
                                            <label for="alimento" class="form-label">Alimento</label>
                                            <InputSelect @bind-Value="item.AlimentoId" class="form-control">
                                                <option value="">Selecione o alimento...</option>
                                                @foreach (var alimento in Alimentos)

                                                {
                                                    <option value="@alimento.Id">@alimento.Nome (@alimento.Categoria)</option>
                                                }
                                            </InputSelect>
                                            <ValidationMessage For="@(() => item.AlimentoId)" />
                                        </div>

                                        <div class="col-md-3">
                                            <label for="quantidade" class="form-label">Quantidade</label>
                                            <InputNumber @bind-Value="item.Quantidade" class="form-control" min="1" />
                                            <ValidationMessage For="@(() => item.Quantidade)" />
                                        </div>

                                        <div class="col-md-3">
                                            <label for="unidade" class="form-label">Unidade</label>
                                            <InputSelect @bind-Value="item.UnidadeMedida" class="form-control">
                                                <option value="Kg">Kg</option>
                                                <option value="g">g</option>
                                                <option value="L">L</option>
                                                <option value="ml">ml</option>
                                                <option value="Unidades">Unidades</option>
                                            </InputSelect>
                                            <ValidationMessage For="@(() => item.UnidadeMedida)" />
                                        </div>
                                    </div>
                                </div>
                            }

                            <div class="text-center mt-4">
                                <button type="button" class="btn btn-primary" @onclick="AdicionarItem">
                                    <i class="bi bi-plus-circle me-2"></i>Adicionar Item
                                </button>
                            </div>

                            <div class="d-grid mt-4">
                                <button type="submit" class="btn btn-outline-success btn-lg">
                                    Salvar Doação
                                </button>
                            </div>
                        @* </EditForm> *@
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private Doacao NovaDoacao { get; set; } = new Doacao();

    private List<AlimentoDoacao> Itens { get; set; } = new();

    private List<CadastroDeDoador> Ongs { get; set; } = new();

    private List<Alimento> Alimentos { get; set; } = new();

    private bool erroSalvar = false;

    private string mensagemErro = string.Empty;

    private static List<Doacao> DoacoesSalvas { get; set; } = new();

    // protected override void OnInitialized()
    // {
        // Dados mockados
        // Ongs = new List<Ong>
        // {
        //     new Ong { IdOng = 1, RazaoSocial = "ONG Ajuda Comunitária" },
        //     new Ong { IdOng = 2, RazaoSocial = "ONG Alimento para Todos" }
        // };

    //     Alimentos = new List<Alimento>
    //     {
    //         new Alimento { Id = 1, Nome = "Arroz", Categoria = "Grãos" },
    //         new Alimento { Id = 2, Nome = "Feijão", Categoria = "Grãos" },
    //         new Alimento { Id = 3, Nome = "Óleo", Categoria = "Condimentos" },
    //         new Alimento { Id = 4, Nome = "Leite", Categoria = "Laticínios" }
    //     };

    //     NovaDoacao.Status = StatusDoacao.Pendente;
    //     NovaDoacao.DataDoacao = DateTime.Today;
    // }


    private void AdicionarItem()
    {
        Itens.Add(new AlimentoDoacao { Quantidade = 1 }); 
    }


    private void RemoverItem(AlimentoDoacao item)
    {
        Itens.Remove(item);
    }


    private void SalvarDoacao()
    {
        try
        {
            // Validação de quantidade mínima
            foreach (var item in Itens)
            {
                if (item.Quantidade < 1)
                {
                    throw new Exception($"A quantidade para '{ObterNomeAlimento(item.AlimentoId)}' deve ser no mínimo 1");
                }
            }

            // Verifica se há itens
            if (Itens.Count == 0)
            {
                throw new Exception("Adicione pelo menos um item à doação");
            }

            // Simula um ID único
            // NovaDoacao.Id = DoacoesSalvas.Count + 1;

            // Associa os itens à doação (cria nova lista para evitar referência)
            // NovaDoacao.Alimentos = Itens.ToList();

            // Salva na lista estática
            DoacoesSalvas.Add(NovaDoacao);

            // Redireciona para Minhas Doações
            Navigation.NavigateTo("/MinhasDoacoes");
        }

        catch (Exception ex)
        {
            erroSalvar = true;
            mensagemErro = ex.Message;

            StateHasChanged();
        }
    }



    private string ObterNomeAlimento(int id)
    {
        var alimento = Alimentos.FirstOrDefault(a => a.Id == id);
        return alimento?.Nome ?? "Item selecionado";
    }


    // Método para acessar as doações salvas (usado pela página MinhasDoacoes)
    // public static List<Doacao> ObterDoacoesSalvas()
    // {
    //     return DoacoesSalvas;
    // }
}
