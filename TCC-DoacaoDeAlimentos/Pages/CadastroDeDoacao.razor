@page "/CadastroDeDoacao"
@using TCCDoacaoDeAlimentos.Models;
@inject NavigationManager Navigation

<div class="min-vh-100 d-flex align-items-center" style="background-color: #d4edda;">
    <div class="container py-5">
        <div class="row justify-content-center">
            <div class="col-lg-8 col-md-10">
                <div class="card shadow">
                    <div class="card-body p-5">
                        <h1 class="card-title text-center">Cadastro de Doação</h1>
                        <h6 class="text-center mb-4">
                            Cadastre uma nova doação para beneficiar uma ONG
                        </h6>

                        <EditForm Model="@NovaDoacao" OnValidSubmit="SalvarDoacao">
                            <Microsoft.AspNetCore.Components.Forms.DataAnnotationsValidator />
                            <Microsoft.AspNetCore.Components.Forms.ValidationSummary />

                            <hr />

                            <h2 class="border-bottom pb-2 mb-4 mt-5">Informações da Doação</h2>

                            @* <div class="mb-3"> *@
                            @*     <label for="doador" class="form-label">Doador</label> *@
                            @*     <InputText @bind-Value="NovaDoacao.IdDoador" class="form-control" id="doador" placeholder="ID do Doador" /> *@
                            @*     <ValidationMessage For="@(() => NovaDoacao.IdDoador)" /> *@
                            @* </div> *@

                            <div class="mb-3">
                                <label for="ong" class="form-label">ONG Beneficiada</label>
                                <InputSelect @bind-Value="NovaDoacao.IdOng" class="form-control" id="ong">
                                    <option value="">Selecione a ONG...</option>
                                    @foreach (var ong in Ongs)
                                    {
                                        <option value="@ong.IdOng">@ong.RazaoSocial</option>
                                    }
                                </InputSelect>
                                <ValidationMessage For="@(() => NovaDoacao.IdOng)" />
                            </div>

                            <div class="row">
                                <div class="col-md-6 mb-3">
                                    <label for="dataDoacao" class="form-label">Data da Doação</label>
                                    <InputDate @bind-Value="NovaDoacao.DataDoacao" class="form-control" id="dataDoacao" />
                                    <ValidationMessage For="@(() => NovaDoacao.DataDoacao)" />
                                </div>

                                <div class="col-md-6 mb-3">
                                    <label for="status" class="form-label">Status da Doação</label>
                                    <InputSelect @bind-Value="NovaDoacao.Status" class="form-control" id="status">
                                        <option value="Pendente">Pendente</option>
                                        <option value="Cancelada">Cancelada</option>
                                        <option value="Finalizada">Finalizada</option>
                                    </InputSelect>
                                    <ValidationMessage For="@(() => NovaDoacao.Status)" />
                                </div>
                            </div>


                            <div class="mb-3">
                                <label for="observacao" class="form-label">Observações</label>
                                <InputTextArea @bind-Value="NovaDoacao.Observacao" class="form-control" id="observacao" placeholder="Informações adicionais sobre a doação" />
                            </div>

                            <h3 class="border-bottom pb-2 mb-4 mt-5">Itens da Doação</h3>

                            @foreach (var item in Itens)
                            {
                                <div class="border p-3 mb-4 rounded bg-light position-relative">
                                    <button type="button" class="btn-close position-absolute top-0 end-0 m-2" @onclick="() => RemoverItem(item)" title="Remover Item"></button>
                                    <div class="row g-3">
                                        <div class="col-md-6">
                                            <label for="alimento" class="form-label">Alimento</label>
                                            <InputSelect @bind-Value="item.AlimentoId" class="form-control">
                                                <option value="">Selecione o alimento...</option>
                                                @foreach (var alimento in Alimentos)
                                                {
                                                    <option value="@alimento.Id">@alimento.Nome (@alimento.Categoria)</option>
                                                }
                                            </InputSelect>
                                            <ValidationMessage For="@(() => item.AlimentoId)" />
                                        </div>

                                        <div class="col-md-3">
                                            <label for="quantidade" class="form-label">Quantidade</label>
                                            <InputNumber @bind-Value="item.Quantidade" class="form-control" />
                                            <ValidationMessage For="@(() => item.Quantidade)" />
                                        </div>

                                        <div class="col-md-3">
                                            <label for="unidade" class="form-label">Unidade</label>
                                            <InputSelect @bind-Value="item.UnidadeMedida" class="form-control">
                                                <option value="Kg">Kg</option>
                                                <option value="g">g</option>
                                                <option value="L">L</option>
                                                <option value="ml">ml</option>
                                                <option value="Unidades">Unidades</option>
                                            </InputSelect>
                                            <ValidationMessage For="@(() => item.UnidadeMedida)" />
                                        </div>
                                    </div>
                                </div>
                            }

                            <div class="text-center mt-4">
                                <button type="button" class="btn btn-primary" @onclick="AdicionarItem">
                                    <i class="bi bi-plus-circle me-2"></i>Adicionar Item
                                </button>
                            </div>

                            <div class="d-grid mt-4">
                                <button type="submit" class="btn btn-outline-success n-lg">Salvar Doação</button>
                            </div>
                        </EditForm>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private Doacao NovaDoacao { get; set; } = new Doacao();
    private List<AlimentoDoacao> Itens { get; set; } = new();
    private List<Ong> Ongs { get; set; } = new();
    private List<Alimento> Alimentos { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        Ongs = await ObterOngsAsync();
        Alimentos = await ObterAlimentosAsync();
    }

    private Task<List<Ong>> ObterOngsAsync()
    {
        return Task.FromResult(new List<Ong>
        {
            new Ong { IdOng = 1, RazaoSocial = "ONG Exemplo 1" },
            new Ong { IdOng = 2, RazaoSocial = "ONG Exemplo 2" }
        });
    }

    private Task<List<Alimento>> ObterAlimentosAsync()
    {
        return Task.FromResult(new List<Alimento>
        {
            new Alimento { Id = 1, Nome = "Arroz", Categoria = "Grãos" },
            new Alimento { Id = 2, Nome = "Feijão", Categoria = "Grãos" }
        });
    }

    private void AdicionarItem()
    {
        Itens.Add(new AlimentoDoacao());
    }

    private void RemoverItem(AlimentoDoacao item)
    {
        Itens.Remove(item);
    }

    private async Task SalvarDoacao()
    {
        // Lógica para salvar a doação
        Console.WriteLine("Doação salva com sucesso!");
    }
}
