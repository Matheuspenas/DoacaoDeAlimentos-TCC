@page "/CadastroDeDoador"
@using System.ComponentModel.DataAnnotations

<PageTitle>Cadastro de Doador</PageTitle>

<div class="container py-4">
    <div class="row justify-content-center">
        <div class="col-lg-8">
            <div class="card shadow">
                <div class="card-body p-4">
                    <h3 class="card-title text-center mb-4">Cadastro de Doador</h3>
                    
                    <EditForm Model="@doador" OnValidSubmit="Salvar">
                        <DataAnnotationsValidator />
                        <ValidationSummary />
                        
                        <div class="row mb-3">
                            <div class="col-md-12">
                                <label class="form-label fw-bold">Nome:</label>
                                <InputText @bind-Value="doador.Nome" class="form-control" />
                                <ValidationMessage For="@(() => doador.Nome)" />
                            </div>
                        </div>
                        
                        <div class="row mb-3">
                            <div class="col-md-6">
                                <label class="form-label fw-bold">Telefone:</label>
                                @* <InputMask @bind-Value="doador.Telefone" class="form-control"  *@
                                          mask="(00) 00000-0000" placeholder="(00) 00000-0000" />
                                <ValidationMessage For="@(() => doador.Telefone)" />
                            </div>
                            <div class="col-md-6">
                                <label class="form-label fw-bold">E-mail:</label>
                                <InputText @bind-Value="doador.Email" class="form-control" type="email" />
                                <ValidationMessage For="@(() => doador.Email)" />
                            </div>
                        </div>
                        
                        <div class="row mb-3">
                            <div class="col-md-12">
                                <label class="form-label fw-bold">Tipo de Pessoa:</label>
                                <InputRadioGroup @bind-Value="doador.TipoPessoa" class="form-check">
                                    <div class="form-check form-check-inline">
                                        <InputRadio Value="@("F")" class="form-check-input" />
                                        <label class="form-check-label">Física</label>
                                    </div>
                                    <div class="form-check form-check-inline">
                                        <InputRadio Value="@("J")" class="form-check-input" />
                                        <label class="form-check-label">Jurídica</label>
                                    </div>
                                </InputRadioGroup>
                                <ValidationMessage For="@(() => doador.TipoPessoa)" />
                            </div>
                        </div>
                        
                        <div class="row mb-3">
                            <div class="col-md-8">
                                <label class="form-label fw-bold">Endereço:</label>
                                <InputText @bind-Value="doador.Endereco" class="form-control" />
                                <ValidationMessage For="@(() => doador.Endereco)" />
                            </div>
                            <div class="col-md-4">
                                <label class="form-label fw-bold">Bairro:</label>
                                <InputText @bind-Value="doador.Bairro" class="form-control" />
                                <ValidationMessage For="@(() => doador.Bairro)" />
                            </div>
                        </div>
                        
                        <div class="row mb-3">
                            <div class="col-md-6">
                                <label class="form-label fw-bold">CEP:</label>
                                @* <InputMask @bind-Value="ong.CEP" class="form-control"  *@
                                          mask="00000-000" placeholder="00000-000" />
                                <ValidationMessage For="@(() => doador.CEP)" />
                            </div>
                            <div class="col-md-6">
                                <label class="form-label fw-bold">Sexo:</label>
                                <InputRadioGroup @bind-Value="doador.Sexo" class="form-check">
                                    <div class="form-check form-check-inline">
                                        <InputRadio Value="@("M")" class="form-check-input" />
                                        <label class="form-check-label">Masculino</label>
                                    </div>
                                    <div class="form-check form-check-inline">
                                        <InputRadio Value="@("F")" class="form-check-input" />
                                        <label class="form-check-label">Feminino</label>
                                    </div>
                                </InputRadioGroup>
                                <ValidationMessage For="@(() => doador.Sexo)" />
                            </div>
                        </div>
                        
                        <div class="d-grid gap-2 d-md-flex justify-content-md-end mt-4">
                            <button type="button" class="btn btn-secondary me-md-2" @onclick="Limpar">Limpar</button>
                            <button type="submit" class="btn btn-success">Salvar</button>
                        </div>
                    </EditForm>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private DoadorModel doador = new DoadorModel();
    private string dados = "";
    
    private void Salvar()
    {
        // Processar os dados (pode ser substituído por chamada a API)
        dados = $"Nome: {doador.Nome}\n" +
                $"Telefone: {doador.Telefone}\n" +
                $"E-mail: {doador.Email}\n" +
                $"Tipo Pessoa: {doador.TipoPessoa}\n" +
                $"Endereço: {doador.Endereco}\n" +
                $"Bairro: {doador.Bairro}\n" +
                $"CEP: {doador.CEP}\n" +
                $"Sexo: {doador.Sexo}";
        
        Console.WriteLine(dados); // Ou enviar para um serviço
        
        // Mostrar mensagem de sucesso
        // Limpar();
    }
    
    private void Limpar()
    {
        doador = new DoadorModel();
    }
    
    public class DoadorModel
    {
        [Required(ErrorMessage = "O nome é obrigatório")]
        [StringLength(100, ErrorMessage = "Máximo de 100 caracteres")]
        public string Nome { get; set; } = "";
        
        [Required(ErrorMessage = "O telefone é obrigatório")]
        [RegularExpression(@"^\(\d{2}\) \d{5}-\d{4}$", ErrorMessage = "Formato inválido")]
        public string Telefone { get; set; } = "";
        
        [Required(ErrorMessage = "O e-mail é obrigatório")]
        [EmailAddress(ErrorMessage = "E-mail inválido")]
        public string Email { get; set; } = "";
        
        [Required(ErrorMessage = "Selecione o tipo de pessoa")]
        public string TipoPessoa { get; set; } = "";
        
        [Required(ErrorMessage = "O endereço é obrigatório")]
        public string Endereco { get; set; } = "";
        
        [Required(ErrorMessage = "O bairro é obrigatório")]
        public string Bairro { get; set; } = "";
        
        [Required(ErrorMessage = "O CEP é obrigatório")]
        [RegularExpression(@"^\d{5}-\d{3}$", ErrorMessage = "CEP inválido")]
        public string CEP { get; set; } = "";
        
        [Required(ErrorMessage = "Selecione o sexo")]
        public string Sexo { get; set; } = "";
    }
}